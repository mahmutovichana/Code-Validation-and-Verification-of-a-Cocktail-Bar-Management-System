@model IEnumerable<SmartCafe.Models.Drink>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Index";
    Layout = null;
}

<style>
    /* Stilovi za header */
    body {
        font-family: 'Montserrat', sans-serif;
        margin: 0;
        padding: 0;
        background-image: url('/images/abstractBackground2.png');
        color: black;
    }

    .header {
        background-color: transparent;
        color: white;
        padding: 0px 10px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-right: 20px; 
    }

    .nav {
        list-style-type: none !important;
        display: flex;
        align-items: center;
    }

        .nav li {
            margin-right: 35px;
            margin-top: -50px;
            text-transform: uppercase;
            font-size: 14px;
            list-style-type: none;
        }

        .nav a {
            color: white;
            text-decoration: none;
            padding-bottom: 3px;
            border-bottom: 2px solid transparent;
            transition: border-bottom-color 0.3s;
            list-style-type: none;
        }

            .nav a:hover {
                border-bottom-color: #fff;
                list-style-type: none;
            }

    .nav-item {
        list-style-type: none;
    }

    .logo img {
        max-width: 35%;
        margin-right: 0px;
        margin-left: 15px;
        margin-top: -20px;
    }

    /* Stilovi za statistiku */
    .statistics {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-gap: 20px;
        margin-top: 20px;
        margin-left: 20%;
        margin-right: 20%;
    }

    .statistics-item {
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
        background-color: rgba(0, 0, 0, 0.5);
        padding: 20px;
        border-radius: 5px;
        color: white;
        transition: background-color 0.3s;
    }

        .statistics-item:hover {
            background-color: rgba(0, 0, 0, 0.7);
        }

    .statistics-label {
        font-size: 18px;
        font-weight: bold;
        margin-bottom: 10px;
    }

    .statistics-value {
        font-size: 24px;
        font-weight: bold;
        margin-bottom: 10px;
    }

    .statistics-description {
        grid-column: span 2;
        text-align: center;
        margin-top: 40px;
        color: white;
    }

        .statistics-description h2 {
            font-size: 32px;
            margin-bottom: 10px;
        }

        .statistics-description p {
            font-size: 16px;
        }


    /* Stilovi za Most Sold Cocktail */
    .most-sold-cocktail {
        margin: 5% auto;
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
        background-color: rgba(0, 0, 0, 0.5); /* Polu transparentna pozadina */
        padding: 20px;
        border-radius: 5px;
        color: white;
        width: fit-content;
        max-width: 20%;
    }

        .most-sold-cocktail img {
            max-width: 50%;
            height: auto; 
            margin-bottom: 10px;
            border-radius: 20px;
        }

        .most-sold-cocktail:hover {
            background-color: rgba(0, 0, 0, 0.7);
        }

    .most-sold-cocktail-name {
        font-size: 24px;
        margin-bottom: 10px;
    }

    /* Stilovi za carousel */
    .carousel {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        grid-gap: 40px; 
        margin: 15%;
        margin-top: 0;
        margin-bottom: 40px;
    }

    .carousel-item {
        display: flex;
        width: fit-content;
        flex-direction: column;
        align-items: center;
        text-align: center;
        background-color: #f5f5f5;
        padding: 10px;
        margin: 2% auto;
        border-radius: 5px;
        transition: background-color 0.3s;
        cursor: pointer;
        text-decoration: none; 
        color: black; 
    }

        .carousel-item:hover {
            background-color: #e0e0e0;
        }

    .carousel-image {
        width: 200px;
        max-width: 100%;
        height: 200px; 
        object-fit: cover;
        border-radius: 5px;
    }

    /* Stilovi za modalni prozor */
    .modal {
        display: none; /* Inicijalno sakriven */
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.4); /* Polu transparentna pozadina */
    }

    .modal-content {
        background-color: #fefefe;
        margin: 15% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 80%;
        max-width: 600px;
        border-radius: 5px;
        position: relative;
        display: flex; 
    }

    .edit-image {
        max-width: 40%;
        height: auto;
        border-radius: 10px;
        margin-right: 20px; 
    }

    .edit-details {
        display: flex;
        flex-direction: column;
        justify-content: center;
    }

    .close {
        color: #aaa;
        position: absolute;
        top: 10px;
        right: 20px;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
    }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }

    .modal h1 {
        margin-top: 0;
    }

    .modal form {
        margin-top: 20px;
    }

    .form-group {
        margin-bottom: 20px;
    }

        .form-group label {
            display: block;
            font-weight: bold;
            margin-bottom: 5px;
        }

        .form-group input[type="text"],
        .form-group input[type="number"] {
            width: 100%;
            padding: 5px;
            font-size: 16px;
            border-radius: 5px;
            border: 1px solid #ccc;
        }

        .form-group input[type="submit"] {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            font-size: 16px;
            border-radius: 5px;
            border: none;
            cursor: pointer;
        }

            .form-group input[type="submit"]:hover {
                background-color: #45a049;
            }

    .logout-button {
        display: inline-block;
        position: relative;
        z-index: 1;
        overflow: hidden;
        text-decoration: none;
        font-family: sans-serif;
        font-weight: 600;
        font-size: 2em;
        padding: 0.75em 1em;
        color: #FF5A5F;
        border: 0.15em solid #FF5A5F;
        border-radius: calc(0.75em + 0.5em + 0.15em);
        transition: 3s;
    }

        .logout-button:before,
        .logout-button:after {
            content: '';
            position: absolute;
            top: -1.5em;
            z-index: -1;
            width: 200%;
            aspect-ratio: 1;
            border: none;
            border-radius: 40%;
            background-color: rgba(0, 0, 0, 0.7);
            transition: 4s;
        }

        .logout-button:before {
            left: -80%;
            transform: translate3d(0, 5em, 0) rotate(-340deg);
        }

        .logout-button:after {
            right: -80%;
            transform: translate3d(0, 5em, 0) rotate(390deg);
        }

        .logout-button:hover,
        .logout-button:focus {
            color: #FFFFFF;
        }

            .logout-button:hover:before,
            .logout-button:hover:after,
            .logout-button:focus:before,
            .logout-button:focus:after {
                transform: none;
                background-color: rgba(255, 90, 95, 0.75); /* Življa boja */
            }

    /* Team Members */
    .team-grid {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        grid-template-rows: repeat(2, 1fr);
        gap: 10px;
        justify-content: center;
        align-items: center;
        margin-bottom: 20px; 
    }

    .team-member {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        width: 150px;
        margin: 0 auto; 
        box-sizing: border-box; 
        padding: 10px; 
    }

    .team-heading {
        font-size: 24px;
        font-weight: bold;
        margin-bottom: 10px;
        color: white;
        text-align: center;
        margin-top: 0;
    }

    .team-member {
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
        width: 200px;
    }

        .team-member img {
            width: 150px;
            height: 150px;
            object-fit: cover;
            border-radius: 50%;
            border: 3px solid #fff;
            box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.4);
            transition: all 0.3s ease-in-out;
        }

            .team-member img:hover {
                transform: scale(1.1);
            }

    .member-job {
        font-size: 12px;
        margin-top: 2px;
        color: #ffcc33; /* Tamnije žuta boja */
    }

    .member-name {
        text-transform: uppercase;
        font-weight: bold;
        color: #fff; /* Bijela boja za ime i prezime */
        margin-top: 5px;
    }

    .search-container {
        height: 100vh; 
        font-family: 'Montserrat', sans-serif;
    }

    #searchInputIngredient, #searchInputName{
        display: block;
        margin: 3% auto 2% auto;
        padding: 10px;
        border-radius: 5px;
        border: 1px solid #ccc;
        width: 500px;
        font-family: 'Montserrat', sans-serif;
    }
</style>

<!DOCTYPE html>
<html>
<head>
    <title>Lagoon's Cocktail Bar - Admin Panel</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
</head>
<body>
    <div class="header">
        <div class="logo">
            <img src="~/images/lagoonLogoWhiteTransparent.png" alt="Logo">
        </div>
        <ul class="navbar-nav">
            <h1 style="margin-right:2px;">Admin Panel</h1>
        </ul>
    </div>

    <div class="statistics">
        <div class="statistics-description">
            <h2>Lagoon Bar Stats</h2>
            <p>Welcome to the Lagoon Bar Stats section, where you can check out some key metrics related to the performance of our bar.</p>
        </div>
        <div class="statistics-item">
            <span class="statistics-label">Number of workers</span>
            <span class="statistics-value" id="numWorkersValue">6</span>
        </div>
        <div class="statistics-item">
            <span class="statistics-label">Number of customers</span>
            <span class="statistics-value" id="numCustomersValue">4185</span>
        </div>
    </div>
    <ul>
        @foreach (var ingredient in ViewBag.SortedIngredients)
        {
            <li>@ingredient.name - @ingredient.quantity</li>
        }
    </ul>

    <script>
        function animateValue(element, start, end, duration) {
          const range = end - start;
          const increment = end > start ? 1 : -1;
          const stepTime = Math.abs(Math.floor(duration / range));
          const obj = element;

          let current = start;

          const timer = setInterval(() => {
            current += increment;
            obj.textContent = current;
            if ((increment > 0 && current >= end) || (increment < 0 && current <= end)) {
              clearInterval(timer);
              obj.textContent = end;
            }
          }, stepTime);
        }

        const numWorkersValue = document.getElementById('numWorkersValue');
        animateValue(numWorkersValue, 0, 6, 2000); // Trajanje animacije je 2000ms (2 sekunde)

        const numCustomersValue = document.getElementById('numCustomersValue');
        animateValue(numCustomersValue, 0, 4185, 2000); // Trajanje animacije je 2000ms (2 sekunde)

    </script>

    <div>
        <input type="text" id="searchInputName" onkeyup="filterDrinksByName()" placeholder="Search for drinks by name..">
    </div>

    <script>
        function filterDrinksByName() {
            var input, filter, carousel, drinkItems, name, i, txtValue;
            input = document.getElementById('searchInputName');
            filter = input.value.toUpperCase();
            carousel = document.getElementsByClassName('carousel')[0];
            drinkItems = carousel.getElementsByClassName('carousel-item');
            for (i = 0; i < drinkItems.length; i++) {
                name = drinkItems[i].getElementsByTagName('h3')[0];
                txtValue = name.textContent || name.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    drinkItems[i].style.display = '';
                } else {
                    drinkItems[i].style.display = 'none';
                }
            }
        }
    </script>

    <div>
        <input type="text" id="searchInputIngredient" onkeyup="filterDrinksByIngredients()" placeholder="Search for drinks by ingredients..">
    </div>

    <ul id="searchResults"></ul>

    <script>
        function filterDrinksByIngredients() {
            var input, filter, carousel, drinkItems, url;
            input = document.getElementById('searchInputIngredient');
            filter = input.value.toUpperCase();
            carousel = document.getElementsByClassName('carousel')[0];
            drinkItems = carousel.getElementsByClassName('carousel-item');

            var url = '@Url.Action("SearchDrinksByIngredient", "AdminPanel")';
            fetch(`${url}?searchTerm=${filter}`)
                .then(response => response.json())
                .then(data => {
                    // Clear previous search results
                    document.getElementById('searchResults').innerHTML = '';

                    // Populate the search results
                    var ul = document.getElementById('searchResults');
                    data.forEach(item => {
                        var li = document.createElement('li');
                        li.appendChild(document.createTextNode(item.name));
                        ul.appendChild(li);
                    });

                    Array.from(drinkItems).forEach(item => {
                        var name = item.getElementsByTagName('h3')[0];
                        var txtValue = name.textContent || name.innerText;
                        if (!txtValue.toUpperCase().includes(filter)) {
                            item.style.display = 'none';
                        } else {
                            item.style.display = '';
                        }
                    });
                })
                .catch(error => console.error('Error:', error));
        }
    </script>

    <div class="carousel">
        @foreach (var drink in Model)
        {
            <div class="carousel-item">
                <h3>@drink.name</h3>
                <p>Price: @drink.price</p>
                <img src="@Url.Content("~/images/" + drink.name + ".jpg")" alt="@drink.name" class="carousel-image" />

                <!-- Modalni prozor za uređivanje -->
                <div id="modal-@drink.id" class="modal">
                    <div class="modal-content">
                        
                        <h1>Edit Drink</h1>
                        <form method="post" asp-action="Edit" asp-route-id="@drink.id">
                            <img src="@Url.Content("~/images/" + drink.name + ".jpg")" alt="@drink.name" class="edit-image" />
                            <div class="form-group">
                                <label for="name">Name:</label>
                                <input type="text" id="name" name="name" value="@drink.name" />
                            </div>
                            <div class="form-group">
                                <label for="price">Price:</label>
                                <input type="number" id="price" name="price" value="@drink.price" />
                            </div>


                            <div class="form-group">
                                <input type="submit" value="Save" />
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="team-heading">Team Members</div>
    <div class="team-grid">
    <div class="team-member">
        <img src="@Url.Content("~/images/teamMember1.jpg")" alt="Uposlenik 1" />
        <div class="member-name">Hanna Barker</div>
        <div class="member-job">HR Manager</div>
    </div>
    <div class="team-member">
        <img src="@Url.Content("~/images/teamMember2.jpg")" alt="Uposlenik 2" />
        <div class="member-name">Sam Miller</div>
        <div class="member-job">Bartender</div>
    </div>
    <div class="team-member">
        <img src="@Url.Content("~/images/teamMember3.jpg")" alt="Uposlenik 3" />
        <div class="member-name">Clayton Lane</div>
        <div class="member-job">Bartender</div>
    </div>
    <div class="team-member">
        <img src="@Url.Content("~/images/teamMember4.jpg")" alt="Uposlenik 4" />
        <div class="member-name">Robert Barkfield</div>
        <div class="member-job">Bartender</div>
    </div>
    <div class="team-member">
        <img src="@Url.Content("~/images/teamMember5.jpg")" alt="Uposlenik 5" />
        <div class="member-name">Margaret Jones</div>
        <div class="member-job">Bartender</div>
    </div>
    <div class="team-member">
        <img src="@Url.Content("~/images/teamMember6.jpg")" alt="Uposlenik 6" />
        <div class="member-name">Jenny Francis</div>
        <div class="member-job">Finance Manager</div>
    </div>
    </div>

    <script>
        // JavaScript kod za modalni prozor
        var modalItems = document.getElementsByClassName("carousel-item");
        var modals = document.getElementsByClassName("modal");

        // Prikazuje modalni prozor za određenu stavku
        function showModal(itemIndex) {
            modals[itemIndex].style.display = "block";
        }

        // Postavlja događaje za prikazivanje/skrivanje modalnih prozora
        for (var i = 0; i < modalItems.length; i++) {
            (function (index) {
                modalItems[index].addEventListener("click", function () {
                    showModal(index);
                });

                var closeButtons = modals[index].getElementsByClassName("close");
                for (var j = 0; j < closeButtons.length; j++) {
                    closeButtons[j].addEventListener("click", function () {
                        hideModal(index);
                    });
                }

                // Sakriva modalni prozor za određenu stavku
                function hideModal(itemIndex) {
                    modals[itemIndex].style.display = "none";
                }
            })(i);
        }
    </script>
</body>
</html>